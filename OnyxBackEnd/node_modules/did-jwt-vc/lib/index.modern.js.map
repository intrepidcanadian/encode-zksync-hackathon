{"version":3,"file":"index.modern.js","sources":["../src/types.ts","../src/converters.ts","../src/validators.ts","../src/index.ts"],"sourcesContent":["import { Signer, JWTVerified, JWTHeader, JWTOptions, JWTVerifyOptions } from 'did-jwt'\n\nexport const JWT_ALG = 'ES256K'\nexport const DID_FORMAT = /^did:([a-zA-Z0-9_]+):([:[a-zA-Z0-9_.-]+)(\\/[^#]*)?(#.*)?$/\nexport const JWT_FORMAT = /^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$/\nexport const DEFAULT_CONTEXT = 'https://www.w3.org/2018/credentials/v1'\nexport const DEFAULT_VC_TYPE = 'VerifiableCredential'\nexport const DEFAULT_VP_TYPE = 'VerifiablePresentation'\nexport const DEFAULT_JWT_PROOF_TYPE = 'JwtProof2020'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type JwtCredentialSubject = Record<string, any>\n\nexport interface CredentialStatus {\n  id: string\n  type: string\n}\n\n/**\n * A JWT payload representation of a Credential\n * @see https://www.w3.org/TR/vc-data-model/#jwt-encoding\n */\nexport interface JwtCredentialPayload {\n  iss?: string\n  sub?: string\n  vc: Extensible<{\n    '@context': string[] | string\n    type: string[] | string\n    credentialSubject: JwtCredentialSubject\n    credentialStatus?: CredentialStatus\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evidence?: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    termsOfUse?: any\n  }>\n  nbf?: number\n  aud?: string | string[]\n  exp?: number\n  jti?: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * A JWT payload representation of a Presentation\n * @see https://www.w3.org/TR/vc-data-model/#jwt-encoding\n */\nexport interface JwtPresentationPayload {\n  vp: Extensible<{\n    '@context': string[] | string\n    type: string[] | string\n    verifiableCredential?: VerifiableCredential[] | VerifiableCredential\n  }>\n  iss?: string\n  aud?: string | string[]\n  nbf?: number\n  exp?: number\n  jti?: string\n  nonce?: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport type IssuerType = Extensible<{ id: string }> | string\nexport type DateType = string | Date\n\n/**\n * used as input when creating Verifiable Credentials\n */\ninterface FixedCredentialPayload {\n  '@context': string | string[]\n  id?: string\n  type: string | string[]\n  issuer: IssuerType\n  issuanceDate: DateType\n  expirationDate?: DateType\n  credentialSubject: Extensible<{\n    id?: string\n  }>\n  credentialStatus?: CredentialStatus\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  evidence?: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  termsOfUse?: any\n}\n\n/**\n * A more flexible representation of a {@link W3CCredential} that can be used as input to methods\n * that expect it.\n */\nexport type CredentialPayload = Extensible<FixedCredentialPayload>\n\n/**\n * This is meant to reflect unambiguous types for the properties in `CredentialPayload`\n */\ninterface NarrowCredentialDefinitions {\n  '@context': string[]\n  type: string[]\n  issuer: Exclude<IssuerType, string>\n  issuanceDate: string\n  expirationDate?: string\n}\n\n/**\n * Replaces the matching property types of T with the ones in U\n */\ntype Replace<T, U> = Omit<T, keyof U> & U\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Extensible<T> = T & { [x: string]: any }\n\n/**\n * This data type represents a parsed VerifiableCredential.\n * It is meant to be an unambiguous representation of the properties of a Credential and is usually the result of a\n * transformation method.\n *\n * `issuer` is always an object with an `id` property and potentially other app specific issuer claims\n * `issuanceDate` is an ISO DateTime string\n * `expirationDate`, is a nullable ISO DateTime string\n *\n * Any JWT specific properties are transformed to the broader W3C variant and any app specific properties are left\n * intact\n */\nexport type W3CCredential = Extensible<Replace<FixedCredentialPayload, NarrowCredentialDefinitions>>\n\n/**\n * used as input when creating Verifiable Presentations\n */\nexport interface FixedPresentationPayload {\n  '@context': string | string[]\n  type: string | string[]\n  id?: string\n  verifiableCredential?: VerifiableCredential[]\n  holder: string\n  verifier?: string | string[]\n  issuanceDate?: string\n  expirationDate?: string\n}\n\n/**\n * A more flexible representation of a {@link W3CPresentation} that can be used as input to methods\n * that expect it.\n */\nexport type PresentationPayload = Extensible<FixedPresentationPayload>\n\ninterface NarrowPresentationDefinitions {\n  '@context': string[]\n  type: string[]\n  verifier: string[]\n  verifiableCredential?: Verifiable<W3CCredential>[]\n}\n\n/**\n * This data type represents a parsed Presentation payload.\n * It is meant to be an unambiguous representation of the properties of a Presentation and is usually the result of a\n * transformation method.\n *\n * The `verifiableCredential` array should contain parsed `Verifiable<Credential>` elements.\n * Any JWT specific properties are transformed to the broader W3C variant and any other app specific properties are\n * left intact.\n */\nexport type W3CPresentation = Extensible<Replace<FixedPresentationPayload, NarrowPresentationDefinitions>>\n\nexport interface Proof {\n  type?: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Represents a readonly representation of a verifiable object, including the {@link Proof}\n * property that can be used to verify it.\n */\nexport type Verifiable<T> = Readonly<T> & { readonly proof: Proof }\nexport type JWT = string\n\n/**\n * A union type for both possible representations of a Credential (JWT and W3C standard)\n *\n * @see https://www.w3.org/TR/vc-data-model/#proof-formats\n */\nexport type VerifiableCredential = JWT | Verifiable<W3CCredential>\n\n/**\n * A union type for both possible representations of a Presentation (JWT and W3C standard)\n *\n * @see https://www.w3.org/TR/vc-data-model/#proof-formats\n */\nexport type VerifiablePresentation = JWT | Verifiable<W3CPresentation>\n\nexport type VerifiedJWT = JWTVerified\n\n/**\n * Represents the result of a Presentation verification.\n * It includes the properties produced by `did-jwt` and a W3C compliant representation of\n * the Presentation that was just verified.\n *\n * This is usually the result of a verification method and not meant to be created by generic code.\n */\nexport type VerifiedPresentation = VerifiedJWT & {\n  verifiablePresentation: Verifiable<W3CPresentation>\n}\n\n/**\n * Represents the result of a Credential verification.\n * It includes the properties produced by `did-jwt` and a W3C compliant representation of\n * the Credential that was just verified.\n *\n * This is usually the result of a verification method and not meant to be created by generic code.\n */\nexport type VerifiedCredential = VerifiedJWT & {\n  verifiableCredential: Verifiable<W3CCredential>\n}\n\n/**\n * Represents a tuple of a DID-URL with a `Signer` and associated algorithm.\n */\nexport interface Issuer {\n  did: string\n  signer: Signer\n  alg?: string\n}\n\n/**\n * Represents the Creation Options that can be passed to the createVerifiableCredentialJwt method.\n */\nexport interface CreateCredentialOptions extends Partial<JWTOptions> {\n  /**\n   * Determines whether the JSON->JWT transformation will remove the original fields from the input payload.\n   * See https://www.w3.org/TR/vc-data-model/#jwt-encoding\n   *\n   * @default true\n   */\n  removeOriginalFields?: boolean\n\n  /**\n   * Allows including or overriding some header parameters for the resulting JWT.\n   * If the issuer or holder does not list an `alg`, then the one specified in `header` will be used\n   */\n  header?: Partial<JWTHeader>\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Represents the Verification Options that can be passed to the verifyCredential method.\n * These options are forwarded to the lower level verification code\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface VerifyCredentialOptions extends JWTVerifyOptions {\n  /**\n   * When transforming the result of the verification into a W3C VerifiableCredential, this property dictates whether\n   * the JWT specific properties are removed from the payload or not. Defaults to `true`.\n   */\n  removeOriginalFields?: boolean\n\n  /**\n   * Use this to override the default checks performed during verification\n   */\n  policies?: VerifyCredentialPolicies\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface VerifyCredentialPolicies {\n  // tweak the time at which the credential should be valid (UNIX timestamp, in seconds)\n  now?: number\n  // when false skips issuanceDate check\n  issuanceDate?: boolean\n  // when false skips expirationDate check\n  expirationDate?: boolean\n  // when false skips format checks\n  format?: boolean\n\n  /**\n   * Other policies are forwarded to lower level libs\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Represents the Verification Options that can be passed to the verifyPresentation method.\n * The verification will fail if given options are NOT satisfied.\n */\nexport interface VerifyPresentationOptions extends VerifyCredentialOptions {\n  domain?: string\n  challenge?: string\n}\n\n/**\n * Represents the Creation Options that can be passed to the createVerifiablePresentationJwt method.\n */\nexport interface CreatePresentationOptions extends CreateCredentialOptions {\n  domain?: string\n  challenge?: string\n}\n","import {\n  VerifiableCredential,\n  JWT,\n  JwtPresentationPayload,\n  JwtCredentialPayload,\n  JWT_FORMAT,\n  DEFAULT_JWT_PROOF_TYPE,\n  DEFAULT_CONTEXT,\n  DEFAULT_VC_TYPE,\n  CredentialPayload,\n  W3CCredential,\n  Verifiable,\n  PresentationPayload,\n  W3CPresentation,\n} from './types'\nimport { decodeJWT } from 'did-jwt'\n\n/*\n * Additional W3C VC fields:\n * These are defined as optional top-level properties in the W3C spec but are not mapped to top-level JWT names,\n * so they should be moved inside the \"vc\" object when transforming to a JWT.\n * Conversely, they should be moved out of the \"vc\" object when transforming from a JWT to W3C JSON.\n */\nconst additionalPropNames = ['evidence', 'termsOfUse', 'refreshService', 'credentialSchema', 'credentialStatus']\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function asArray(arg: any | any[]): any[] {\n  return Array.isArray(arg) ? arg : [arg]\n}\n\nfunction deepCopy<T>(source: T): T {\n  return Array.isArray(source)\n    ? source.map((item) => deepCopy(item))\n    : source instanceof Date\n    ? new Date(source.getTime())\n    : source && typeof source === 'object'\n    ? Object.getOwnPropertyNames(source).reduce((o, prop) => {\n        Object.defineProperty(o, prop, Object.getOwnPropertyDescriptor(source, prop) as NonNullable<PropertyDescriptor>)\n        o[prop] = deepCopy(source[prop as keyof T])\n        return o\n      }, Object.create(Object.getPrototypeOf(source)))\n    : (source as T)\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n  return value !== null && value !== undefined\n}\n\nfunction cleanUndefined<T>(input: T): T {\n  if (typeof input !== 'object') {\n    return input\n  }\n  const obj = { ...input }\n  Object.keys(obj).forEach((key) => obj[key as keyof T] === undefined && delete obj[key as keyof T])\n  return obj\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isLegacyAttestationFormat(payload: Record<string, any>): boolean {\n  // payload is an object and has all the required fields of old attestation format\n  return typeof payload === 'object' && payload.sub && payload.iss && payload.claim && payload.iat\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function attestationToVcFormat(payload: Record<string, any>): JwtCredentialPayload {\n  const { iat, nbf, claim, vc, ...rest } = payload\n  const result: JwtCredentialPayload = {\n    ...rest,\n    nbf: nbf ? nbf : iat,\n    vc: {\n      '@context': [DEFAULT_CONTEXT],\n      type: [DEFAULT_VC_TYPE],\n      credentialSubject: claim,\n    },\n  }\n  if (vc) payload.issVc = vc\n  return result\n}\n\nfunction normalizeJwtCredentialPayload(\n  input: Partial<JwtCredentialPayload>,\n  removeOriginalFields = true\n): W3CCredential {\n  let result: Partial<CredentialPayload> = deepCopy(input)\n\n  if (isLegacyAttestationFormat(input)) {\n    result = attestationToVcFormat(input)\n  }\n\n  // FIXME: handle case when credentialSubject(s) are not object types\n  result.credentialSubject = { ...input.credentialSubject, ...input.vc?.credentialSubject }\n  if (input.sub && !input.credentialSubject?.id && result.credentialSubject) {\n    result.credentialSubject.id = input.sub\n    if (removeOriginalFields) {\n      delete result.sub\n    }\n  }\n  if (removeOriginalFields) {\n    delete result.vc?.credentialSubject\n  }\n\n  if (typeof input.issuer === 'undefined' || typeof input.issuer === 'object') {\n    result.issuer = cleanUndefined({ id: input.iss, ...input.issuer })\n    if (removeOriginalFields && !input.issuer?.id) {\n      delete result.iss\n    }\n  }\n\n  if (!input.id && input.jti) {\n    result.id = result.id || result.jti\n    if (removeOriginalFields) {\n      delete result.jti\n    }\n  }\n\n  const types = [...asArray(result.type), ...asArray(result.vc?.type)].filter(notEmpty)\n  result.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.vc?.type\n  }\n\n  for (const prop of additionalPropNames) {\n    if (input.vc && input.vc[prop]) {\n      if (!result[prop]) {\n        result[prop] = input.vc[prop]\n      }\n      if (removeOriginalFields) {\n        delete result.vc[prop]\n      }\n    }\n  }\n\n  const contextArray: string[] = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vc?.['@context']),\n  ].filter(notEmpty)\n  result['@context'] = [...new Set(contextArray)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result.vc?.['@context']\n  }\n\n  if (!input.issuanceDate && (input.iat || input.nbf)) {\n    result.issuanceDate = new Date((input.nbf || input.iat) * 1000).toISOString()\n    if (removeOriginalFields) {\n      if (input.nbf) {\n        delete result.nbf\n      } else {\n        delete result.iat\n      }\n    }\n  }\n\n  if (!input.expirationDate && input.exp) {\n    result.expirationDate = new Date(input.exp * 1000).toISOString()\n    if (removeOriginalFields) {\n      delete result.exp\n    }\n  }\n\n  if (removeOriginalFields) {\n    if (result.vc && Object.keys(result.vc).length === 0) {\n      delete result.vc\n    }\n  }\n\n  // FIXME: interpret `aud` property as `verifier`\n\n  return result as W3CCredential\n}\n\nfunction normalizeJwtCredential(input: JWT, removeOriginalFields = true): Verifiable<W3CCredential> {\n  let decoded\n  try {\n    decoded = decodeJWT(input)\n  } catch (e) {\n    throw new TypeError('unknown credential format')\n  }\n  return {\n    ...normalizeJwtCredentialPayload(decoded.payload, removeOriginalFields),\n    proof: {\n      type: DEFAULT_JWT_PROOF_TYPE,\n      jwt: input,\n    },\n  }\n}\n\n/**\n * Normalizes a credential payload into an unambiguous W3C credential data type\n * In case of conflict, Existing W3C Credential specific properties take precedence,\n * except for arrays and object types which get merged.\n * @param input either a JWT or JWT payload, or a VerifiableCredential\n */\nexport function normalizeCredential(\n  input: Partial<VerifiableCredential> | Partial<JwtCredentialPayload>,\n  removeOriginalFields = true\n): Verifiable<W3CCredential> {\n  if (typeof input === 'string') {\n    if (JWT_FORMAT.test(input)) {\n      return normalizeJwtCredential(input, removeOriginalFields)\n    } else {\n      let parsed: Record<string, unknown>\n      try {\n        parsed = JSON.parse(input)\n      } catch (e) {\n        throw new TypeError('unknown credential format')\n      }\n      return normalizeCredential(parsed, removeOriginalFields)\n    }\n  } else if (input.proof?.jwt) {\n    // TODO: test that it correctly propagates app specific proof properties\n    return deepCopy({ ...normalizeJwtCredential(input.proof.jwt, removeOriginalFields), proof: input.proof })\n  } else {\n    // TODO: test that it accepts JWT payload, CredentialPayload, VerifiableCredential\n    // TODO: test that it correctly propagates proof, if any\n    return { proof: {}, ...normalizeJwtCredentialPayload(input, removeOriginalFields) }\n  }\n}\n\n/**\n * type used to signal a very loose input is accepted\n */\ntype DeepPartial<T> = T extends Record<string, unknown> ? { [K in keyof T]?: DeepPartial<T[K]> } : T\n\n/**\n * Transforms a W3C Credential payload into a JWT compatible encoding.\n * The method accepts app specific fields and in case of collision, existing JWT properties will take precedence.\n * Also, `nbf`, `exp` and `jti` properties can be explicitly set to `undefined` and they will be kept intact.\n * @param input either a JWT payload or a CredentialPayloadInput\n */\nexport function transformCredentialInput(\n  input: Partial<CredentialPayload> | DeepPartial<JwtCredentialPayload>,\n  removeOriginalFields = true\n): JwtCredentialPayload {\n  if (Array.isArray(input.credentialSubject)) throw Error('credentialSubject of type array not supported')\n\n  const result: Partial<JwtCredentialPayload> = deepCopy({\n    vc: { ...input.vc },\n    ...input,\n  }) as Partial<JwtCredentialPayload>\n  result.vc = result.vc as NonNullable<typeof result.vc>\n\n  const credentialSubject = { ...input.credentialSubject, ...input.vc?.credentialSubject }\n  if (!input.sub) {\n    result.sub = input.credentialSubject?.id\n    if (removeOriginalFields) {\n      delete credentialSubject.id\n    }\n  }\n\n  const contextEntries = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vc?.['@context']),\n  ].filter(notEmpty)\n  result.vc['@context'] = [...new Set(contextEntries)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result['@context']\n  }\n\n  const types = [...asArray(input.type), ...asArray(input.vc?.type)].filter(notEmpty)\n  result.vc.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.type\n  }\n\n  if (input.id && Object.getOwnPropertyNames(input).indexOf('jti') === -1) {\n    result.jti = input.id\n    if (removeOriginalFields) {\n      delete result.id\n    }\n  }\n\n  if (input.issuanceDate && Object.getOwnPropertyNames(input).indexOf('nbf') === -1) {\n    const converted = Date.parse(input.issuanceDate)\n    if (!isNaN(converted)) {\n      result.nbf = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.issuanceDate\n      }\n    }\n  }\n\n  if (input.expirationDate && Object.getOwnPropertyNames(input).indexOf('exp') === -1) {\n    const converted = Date.parse(input.expirationDate)\n    if (!isNaN(converted)) {\n      result.exp = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.expirationDate\n      }\n    }\n  }\n\n  if (input.issuer && Object.getOwnPropertyNames(input).indexOf('iss') === -1) {\n    if (typeof input.issuer === 'object') {\n      result.iss = input.issuer?.id\n      if (removeOriginalFields) {\n        delete result.issuer.id\n        if (Object.keys(result.issuer).length === 0) {\n          delete result.issuer\n        }\n      }\n    } else if (typeof input.issuer === 'string') {\n      result.iss = input.iss || '' + input.issuer\n      if (removeOriginalFields) {\n        delete result.issuer\n      }\n    } else {\n      // nop\n    }\n  }\n\n  result.vc.credentialSubject = credentialSubject\n  if (removeOriginalFields) {\n    delete result.credentialSubject\n  }\n\n  for (const prop of additionalPropNames) {\n    if (input[prop]) {\n      if (!result.vc[prop]) {\n        result.vc[prop] = input[prop]\n      }\n      if (removeOriginalFields) {\n        delete result[prop]\n      }\n    }\n  }\n\n  return result as JwtCredentialPayload\n}\n\nfunction normalizeJwtPresentationPayload(\n  input: DeepPartial<JwtPresentationPayload>,\n  removeOriginalFields = true\n): W3CPresentation {\n  const result: Partial<PresentationPayload> = deepCopy(input)\n\n  result.verifiableCredential = [\n    ...asArray(input.verifiableCredential),\n    ...asArray(input.vp?.verifiableCredential),\n  ].filter(notEmpty)\n  result.verifiableCredential = result.verifiableCredential.map((cred) => {\n    return normalizeCredential(cred, removeOriginalFields)\n  })\n  if (removeOriginalFields) {\n    delete result.vp?.verifiableCredential\n  }\n\n  if (input.iss && !input.holder) {\n    result.holder = input.iss\n    if (removeOriginalFields) {\n      delete result.iss\n    }\n  }\n\n  if (input.aud) {\n    result.verifier = [...asArray(input.verifier), ...asArray(input.aud)].filter(notEmpty)\n    result.verifier = [...new Set(result.verifier)]\n    if (removeOriginalFields) {\n      delete result.aud\n    }\n  }\n\n  if (input.jti && Object.getOwnPropertyNames(input).indexOf('id') === -1) {\n    result.id = input.id || input.jti\n    if (removeOriginalFields) {\n      delete result.jti\n    }\n  }\n\n  const types = [...asArray(input.type), ...asArray(input.vp?.type)].filter(notEmpty)\n  result.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.vp?.type\n  }\n\n  const contexts = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vp?.['@context']),\n  ].filter(notEmpty)\n  result['@context'] = [...new Set(contexts)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result.vp?.['@context']\n  }\n\n  if (!input.issuanceDate && (input.iat || input.nbf)) {\n    result.issuanceDate = new Date((input.nbf || input.iat) * 1000).toISOString()\n    if (removeOriginalFields) {\n      if (input.nbf) {\n        delete result.nbf\n      } else {\n        delete result.iat\n      }\n    }\n  }\n\n  if (!input.expirationDate && input.exp) {\n    result.expirationDate = new Date(input.exp * 1000).toISOString()\n    if (removeOriginalFields) {\n      delete result.exp\n    }\n  }\n\n  if (result.vp && Object.keys(result.vp).length === 0) {\n    if (removeOriginalFields) {\n      delete result.vp\n    }\n  }\n\n  return result as W3CPresentation\n}\n\nfunction normalizeJwtPresentation(input: JWT, removeOriginalFields = true): Verifiable<W3CPresentation> {\n  let decoded\n  try {\n    decoded = decodeJWT(input)\n  } catch (e) {\n    throw new TypeError('unknown presentation format')\n  }\n  return {\n    ...normalizeJwtPresentationPayload(decoded.payload, removeOriginalFields),\n    proof: {\n      type: DEFAULT_JWT_PROOF_TYPE,\n      jwt: input,\n    },\n  }\n}\n\n/**\n * Normalizes a presentation payload into an unambiguous W3C Presentation data type\n * @param input either a JWT or JWT payload, or a VerifiablePresentation\n */\nexport function normalizePresentation(\n  input: Partial<PresentationPayload> | DeepPartial<JwtPresentationPayload> | JWT,\n  removeOriginalFields = true\n): Verifiable<W3CPresentation> {\n  if (typeof input === 'string') {\n    if (JWT_FORMAT.test(input)) {\n      return normalizeJwtPresentation(input, removeOriginalFields)\n    } else {\n      let parsed: Record<string, unknown>\n      try {\n        parsed = JSON.parse(input)\n      } catch (e) {\n        throw new TypeError('unknown presentation format')\n      }\n      return normalizePresentation(parsed, removeOriginalFields)\n    }\n  } else if (input.proof?.jwt) {\n    // TODO: test that it correctly propagates app specific proof properties\n    return { ...normalizeJwtPresentation(input.proof.jwt, removeOriginalFields), proof: input.proof }\n  } else {\n    // TODO: test that it accepts JWT payload, PresentationPayload, VerifiablePresentation\n    // TODO: test that it correctly propagates proof, if any\n    return { proof: {}, ...normalizeJwtPresentationPayload(input, removeOriginalFields) }\n  }\n}\n\n/**\n * Transforms a W3C Presentation payload into a JWT compatible encoding.\n * The method accepts app specific fields and in case of collision, existing JWT properties will take precedence.\n * Also, `nbf`, `exp` and `jti` properties can be explicitly set to `undefined` and they will be kept intact.\n * @param input either a JWT payload or a CredentialPayloadInput\n */\nexport function transformPresentationInput(\n  input: Partial<PresentationPayload> | DeepPartial<JwtPresentationPayload>,\n  removeOriginalFields = true\n): JwtPresentationPayload {\n  const result: Partial<JwtPresentationPayload> = deepCopy({\n    vp: { ...input.vp },\n    ...input,\n  }) as Partial<JwtPresentationPayload>\n  result.vp = result.vp as NonNullable<typeof result.vp>\n\n  const contextEntries = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vp?.['@context']),\n  ].filter(notEmpty)\n  result.vp['@context'] = [...new Set(contextEntries)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result['@context']\n  }\n\n  const types = [...asArray(input.type), ...asArray(input.vp?.type)].filter(notEmpty)\n  result.vp.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.type\n  }\n\n  if (input.id && Object.getOwnPropertyNames(input).indexOf('jti') === -1) {\n    result.jti = input.id\n    if (removeOriginalFields) {\n      delete result.id\n    }\n  }\n\n  if (input.issuanceDate && Object.getOwnPropertyNames(input).indexOf('nbf') === -1) {\n    const converted = Date.parse(input.issuanceDate)\n    if (!isNaN(converted)) {\n      result.nbf = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.issuanceDate\n      }\n    }\n  }\n\n  if (input.expirationDate && Object.getOwnPropertyNames(input).indexOf('exp') === -1) {\n    const converted = Date.parse(input.expirationDate)\n    if (!isNaN(converted)) {\n      result.exp = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.expirationDate\n      }\n    }\n  }\n\n  if (result.verifiableCredential || result.vp?.verifiableCredential) {\n    result.vp.verifiableCredential = [\n      ...asArray(result.verifiableCredential),\n      ...asArray(result.vp?.verifiableCredential),\n    ]\n      .filter(notEmpty)\n      .map((credential: VerifiableCredential) => {\n        if (typeof credential === 'object' && credential.proof?.jwt) {\n          return credential.proof.jwt\n        } else {\n          return credential\n        }\n      })\n  }\n\n  if (removeOriginalFields) {\n    delete result.verifiableCredential\n  }\n\n  if (input.holder && Object.getOwnPropertyNames(input).indexOf('iss') === -1) {\n    if (typeof input.holder === 'string') {\n      result.iss = input.holder\n      if (removeOriginalFields) {\n        delete result.holder\n      }\n    } else {\n      // nop\n    }\n  }\n\n  if (input.verifier) {\n    const audience = [...asArray(input.verifier), ...asArray(input.aud)].filter(notEmpty)\n    result.aud = [...new Set(audience)]\n    if (removeOriginalFields) {\n      delete result.verifier\n    }\n  }\n\n  return result as JwtPresentationPayload\n}\n","import { DEFAULT_CONTEXT, DEFAULT_VC_TYPE, DEFAULT_VP_TYPE, JWT_FORMAT } from './types'\nimport { JwtCredentialSubject, DateType } from './types'\nimport { VerifiableCredential } from '.'\nimport { asArray } from './converters'\nimport { JWT_ERROR } from 'did-jwt'\n\n/**\n * Error prefixes used for known verification failure cases related to the\n * {@link https://www.w3.org/TR/vc-data-model/ | Verifiable Credential data model }\n */\nexport const VC_ERROR = {\n  /**\n   * Thrown when the credential or presentation being verified does not conform to the data model defined by\n   * {@link https://www.w3.org/TR/vc-data-model/ | the spec}\n   */\n  SCHEMA_ERROR: 'schema_error',\n\n  /**\n   * Thrown when the input is not a JWT string\n   */\n  FORMAT_ERROR: 'format_error',\n\n  /**\n   * Thrown when verifying a presentation where `challenge` and/or `domain` don't match the expected values.\n   */\n  AUTH_ERROR: 'auth_error',\n}\n\n/**\n * Known validation or verification error prefixes.\n */\nexport const VC_JWT_ERROR = { ...VC_ERROR, ...JWT_ERROR }\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isDateObject(input: any): input is Date {\n  return input && !isNaN(input) && Object.prototype.toString.call(input) === '[object Date]'\n}\n\nexport function validateJwtFormat(value: VerifiableCredential): void {\n  if (typeof value === 'string' && !value.match(JWT_FORMAT)) {\n    throw new TypeError(`${VC_ERROR.FORMAT_ERROR}: \"${value}\" is not a valid JWT format`)\n  }\n}\n\n// The main scenario we want to guard against is having a timestamp in milliseconds\n// instead of seconds (ex: from new Date().getTime()).\n// We will check the number of digits and assume that any number with 12 or more\n// digits is a millisecond timestamp.\n// 10 digits max is 9999999999 -> 11/20/2286 @ 5:46pm (UTC)\n// 11 digits max is 99999999999 -> 11/16/5138 @ 9:46am (UTC)\n// 12 digits max is 999999999999 -> 09/27/33658 @ 1:46am (UTC)\nexport function validateTimestamp(value: number | DateType): void {\n  if (typeof value === 'number') {\n    if (!(Number.isInteger(value) && value < 100000000000)) {\n      throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: \"${value}\" is not a unix timestamp in seconds`)\n    }\n  } else if (typeof value === 'string') {\n    validateTimestamp(Math.floor(new Date(value).valueOf() / 1000))\n  } else if (!isDateObject(value)) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: \"${value}\" is not a valid time`)\n  }\n}\n\nexport function validateContext(value: string | string[]): void {\n  const input = asArray(value)\n  if (input.length < 1 || input.indexOf(DEFAULT_CONTEXT) === -1) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: @context is missing default context \"${DEFAULT_CONTEXT}\"`)\n  }\n}\n\nexport function validateVcType(value: string | string[]): void {\n  const input = asArray(value)\n  if (input.length < 1 || input.indexOf(DEFAULT_VC_TYPE) === -1) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: type is missing default \"${DEFAULT_VC_TYPE}\"`)\n  }\n}\n\nexport function validateVpType(value: string | string[]): void {\n  const input = asArray(value)\n  if (input.length < 1 || input.indexOf(DEFAULT_VP_TYPE) === -1) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: type is missing default \"${DEFAULT_VP_TYPE}\"`)\n  }\n}\n\nexport function validateCredentialSubject(value: JwtCredentialSubject): void {\n  if (Object.keys(value).length === 0) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: credentialSubject must not be empty`)\n  }\n}\n","import { createJWT, verifyJWT } from 'did-jwt'\nimport { Resolvable } from 'did-resolver'\nimport * as validators from './validators'\nimport {\n  CreateCredentialOptions,\n  CreatePresentationOptions,\n  CredentialPayload,\n  Issuer,\n  JWT,\n  JWT_ALG,\n  JwtCredentialPayload,\n  JwtPresentationPayload,\n  PresentationPayload,\n  Verifiable,\n  VerifiableCredential,\n  VerifiablePresentation,\n  VerifiedCredential,\n  VerifiedPresentation,\n  VerifyCredentialOptions,\n  VerifyCredentialPolicies,\n  VerifyPresentationOptions,\n  W3CCredential,\n  W3CPresentation,\n} from './types'\nimport {\n  asArray,\n  normalizeCredential,\n  normalizePresentation,\n  notEmpty,\n  transformCredentialInput,\n  transformPresentationInput,\n} from './converters'\nimport { VC_ERROR } from './validators'\n\nexport { VC_ERROR, VC_JWT_ERROR } from './validators'\n\nexport {\n  Issuer,\n  CredentialPayload,\n  PresentationPayload,\n  JwtCredentialPayload,\n  JwtPresentationPayload,\n  VerifiableCredential,\n  VerifiablePresentation,\n  VerifiedCredential,\n  VerifiedPresentation,\n  Verifiable,\n  W3CCredential,\n  W3CPresentation,\n  transformCredentialInput,\n  transformPresentationInput,\n  normalizeCredential,\n  normalizePresentation,\n}\n\nexport {\n  CreateCredentialOptions,\n  CreatePresentationOptions,\n  VerifyCredentialOptions,\n  VerifyCredentialPolicies,\n  VerifyPresentationOptions,\n}\n\n/**\n * Creates a VerifiableCredential given a `CredentialPayload` or `JwtCredentialPayload` and an `Issuer`.\n *\n * This method transforms the payload into the [JWT encoding](https://www.w3.org/TR/vc-data-model/#jwt-encoding)\n * described in the [W3C VC spec](https://www.w3.org/TR/vc-data-model) and then validated to conform to the minimum\n * spec\n * required spec.\n *\n * The `issuer` is then used to assign an algorithm, override the `iss` field of the payload and then sign the JWT.\n *\n * @param payload - `CredentialPayload` or `JwtCredentialPayload`\n * @param issuer - `Issuer` the DID, signer and algorithm that will sign the token\n * @param options - Use these options to tweak the creation of the JWT Credential. These are forwarded to did-jwt.\n * @return a `Promise` that resolves to the JWT encoded verifiable credential or rejects with `TypeError` if the\n * `payload` is not W3C compliant\n */\nexport async function createVerifiableCredentialJwt(\n  payload: JwtCredentialPayload | CredentialPayload,\n  issuer: Issuer,\n  options: CreateCredentialOptions = {}\n): Promise<JWT> {\n  const parsedPayload: JwtCredentialPayload = {\n    iat: undefined,\n    ...transformCredentialInput(payload, options.removeOriginalFields),\n  }\n  validateJwtCredentialPayload(parsedPayload)\n  return createJWT(\n    parsedPayload,\n    {\n      ...options,\n      issuer: issuer.did || parsedPayload.iss || '',\n      signer: issuer.signer,\n    },\n    {\n      ...options.header,\n      alg: issuer.alg || options.header?.alg || JWT_ALG,\n    }\n  )\n}\n\n/**\n * Creates a VerifiablePresentation JWT given a `PresentationPayload` or `JwtPresentationPayload` and an `Issuer`.\n *\n * This method transforms the payload into the [JWT encoding](https://www.w3.org/TR/vc-data-model/#jwt-encoding)\n * described in the [W3C VC spec](https://www.w3.org/TR/vc-data-model) and then validated to conform to the minimum\n * spec\n * required spec.\n *\n * The `holder` is then used to assign an algorithm, override the `iss` field of the payload and then sign the JWT.\n *\n * @param payload - `PresentationPayload` or `JwtPresentationPayload`\n * @param holder - `Issuer` of the Presentation JWT (holder of the VC), signer and algorithm that will sign the token\n * @param options - `CreatePresentationOptions` allows to pass additional values to the resulting JWT payload. These\n *   options are forwarded to did-jwt.\n * @return a `Promise` that resolves to the JWT encoded verifiable presentation or rejects with `TypeError` if the\n * `payload` is not W3C compliant\n */\nexport async function createVerifiablePresentationJwt(\n  payload: JwtPresentationPayload | PresentationPayload,\n  holder: Issuer,\n  options: CreatePresentationOptions = {}\n): Promise<JWT> {\n  const parsedPayload: JwtPresentationPayload = {\n    iat: undefined,\n    ...transformPresentationInput(payload, options?.removeOriginalFields),\n  }\n\n  // add challenge to nonce\n  if (options.challenge && Object.getOwnPropertyNames(parsedPayload).indexOf('nonce') === -1) {\n    parsedPayload.nonce = options.challenge\n  }\n\n  // add domain to audience.\n  if (options.domain) {\n    const audience = [...asArray(options.domain), ...asArray(parsedPayload.aud)].filter(notEmpty)\n    parsedPayload.aud = [...new Set(audience)]\n  }\n\n  validateJwtPresentationPayload(parsedPayload)\n  return createJWT(\n    parsedPayload,\n    {\n      ...options,\n      issuer: holder.did || parsedPayload.iss || '',\n      signer: holder.signer,\n    },\n    {\n      ...options.header,\n      alg: holder.alg || options.header?.alg || JWT_ALG,\n    }\n  )\n}\n\nexport function validateJwtCredentialPayload(payload: JwtCredentialPayload): void {\n  validators.validateContext(payload.vc['@context'])\n  validators.validateVcType(payload.vc.type)\n  validators.validateCredentialSubject(payload.vc.credentialSubject)\n  if (payload.nbf) validators.validateTimestamp(payload.nbf)\n  if (payload.exp) validators.validateTimestamp(payload.exp)\n}\n\nexport function validateCredentialPayload(payload: CredentialPayload): void {\n  validators.validateContext(payload['@context'])\n  validators.validateVcType(payload.type)\n  validators.validateCredentialSubject(payload.credentialSubject)\n  if (payload.issuanceDate) validators.validateTimestamp(payload.issuanceDate)\n  if (payload.expirationDate) validators.validateTimestamp(payload.expirationDate)\n}\n\nexport function validateJwtPresentationPayload(payload: JwtPresentationPayload): void {\n  validators.validateContext(payload.vp['@context'])\n  validators.validateVpType(payload.vp.type)\n  // empty credential array is allowed\n  if (payload.vp.verifiableCredential && payload.vp.verifiableCredential.length >= 1) {\n    for (const vc of asArray(payload.vp.verifiableCredential)) {\n      if (typeof vc === 'string') {\n        validators.validateJwtFormat(vc)\n      } else {\n        validateCredentialPayload(vc)\n      }\n    }\n  }\n  if (payload.exp) validators.validateTimestamp(payload.exp)\n}\n\nexport function validatePresentationPayload(payload: PresentationPayload): void {\n  validators.validateContext(payload['@context'])\n  validators.validateVpType(payload.type)\n  // empty credential array is allowed\n  if (payload.verifiableCredential && payload.verifiableCredential.length >= 1) {\n    for (const vc of payload.verifiableCredential) {\n      if (typeof vc === 'string') {\n        validators.validateJwtFormat(vc)\n      } else {\n        validateCredentialPayload(vc)\n      }\n    }\n  }\n  if (payload.expirationDate) validators.validateTimestamp(payload.expirationDate)\n}\n\n/**\n * Verifies and validates a VerifiableCredential that is encoded as a JWT according to the W3C spec.\n *\n * @return a `Promise` that resolves to a `VerifiedCredential` or rejects with `TypeError` if the input is not\n * W3C compliant\n * @param vc - the credential to be verified. Currently only the JWT encoding is supported by this library\n * @param resolver - a configured `Resolver` (or an implementation of `Resolvable`) that can provide the DID document\n *   of the JWT issuer\n * @param options - optional tweaks to the verification process. These are forwarded to did-jwt.\n */\nexport async function verifyCredential(\n  vc: JWT,\n  resolver: Resolvable,\n  options: VerifyCredentialOptions = {}\n): Promise<VerifiedCredential> {\n  const nbf = options?.policies?.issuanceDate === false ? false : undefined\n  const exp = options?.policies?.expirationDate === false ? false : undefined\n  options = { ...options, policies: { ...options?.policies, nbf, exp, iat: nbf } }\n  const verified: Partial<VerifiedCredential> = await verifyJWT(vc, { resolver, ...options })\n  verified.verifiableCredential = normalizeCredential(verified.jwt as string, options?.removeOriginalFields)\n  if (options?.policies?.format !== false) {\n    validateCredentialPayload(verified.verifiableCredential)\n  }\n  return verified as VerifiedCredential\n}\n\n/**\n * Verifies that the given JwtPresentationPayload contains the appropriate options from VerifyPresentationOptions\n *\n * @param payload - the JwtPresentationPayload to verify against\n * @param options - the VerifyPresentationOptions that contain the optional values to verify.\n * @throws {Error} If VerifyPresentationOptions are not satisfied\n */\nexport function verifyPresentationPayloadOptions(\n  payload: JwtPresentationPayload,\n  options: VerifyPresentationOptions\n): void {\n  if (options.challenge && options.challenge !== payload.nonce) {\n    throw new Error(\n      `${VC_ERROR.AUTH_ERROR}: Presentation does not contain the mandatory challenge (JWT: nonce) for : ${options.challenge}`\n    )\n  }\n\n  if (options.domain) {\n    // aud might be an array\n    let matchedAudience\n    if (payload.aud) {\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\n      matchedAudience = audArray.find((item) => options.domain === item)\n    }\n\n    if (typeof matchedAudience === 'undefined') {\n      throw new Error(\n        `${VC_ERROR.AUTH_ERROR}: Presentation does not contain the mandatory domain (JWT: aud) for : ${options.domain}`\n      )\n    }\n  }\n}\n\n/**\n * Verifies and validates a VerifiablePresentation that is encoded as a JWT according to the W3C spec.\n *\n * @return a `Promise` that resolves to a `VerifiedPresentation` or rejects with `TypeError` if the input is\n * not W3C compliant or the VerifyPresentationOptions are not satisfied.\n * @param presentation - the presentation to be verified. Currently only the JWT encoding is supported by this library\n * @param resolver - a configured `Resolver` or an implementation of `Resolvable` that can provide the DID document of\n *   the JWT issuer (presentation holder)\n * @param options - optional verification options that need to be satisfied. These are also forwarded to did-jwt.\n */\nexport async function verifyPresentation(\n  presentation: JWT,\n  resolver: Resolvable,\n  options: VerifyPresentationOptions = {}\n): Promise<VerifiedPresentation> {\n  const nbf = options?.policies?.issuanceDate === false ? false : undefined\n  const exp = options?.policies?.expirationDate === false ? false : undefined\n  options = { audience: options.domain, ...options, policies: { ...options?.policies, nbf, exp, iat: nbf } }\n  const verified: Partial<VerifiedPresentation> = await verifyJWT(presentation, {\n    resolver,\n    ...options,\n  })\n  verifyPresentationPayloadOptions(verified.payload as JwtPresentationPayload, options)\n  verified.verifiablePresentation = normalizePresentation(verified.jwt as string, options?.removeOriginalFields)\n  if (options?.policies?.format !== false) {\n    validatePresentationPayload(verified.verifiablePresentation)\n  }\n  return verified as VerifiedPresentation\n}\n"],"names":["JWT_ALG","JWT_FORMAT","DEFAULT_CONTEXT","DEFAULT_VC_TYPE","DEFAULT_VP_TYPE","DEFAULT_JWT_PROOF_TYPE","additionalPropNames","asArray","arg","Array","isArray","deepCopy","source","map","item","Date","getTime","Object","getOwnPropertyNames","reduce","o","prop","defineProperty","getOwnPropertyDescriptor","create","getPrototypeOf","notEmpty","value","undefined","cleanUndefined","input","obj","keys","forEach","key","isLegacyAttestationFormat","payload","sub","iss","claim","iat","attestationToVcFormat","nbf","vc","rest","result","type","credentialSubject","issVc","normalizeJwtCredentialPayload","removeOriginalFields","id","issuer","jti","types","filter","Set","contextArray","context","issuanceDate","toISOString","expirationDate","exp","length","normalizeJwtCredential","decoded","decodeJWT","e","TypeError","proof","jwt","normalizeCredential","test","parsed","JSON","parse","transformCredentialInput","Error","contextEntries","indexOf","converted","isNaN","Math","floor","normalizeJwtPresentationPayload","verifiableCredential","vp","cred","holder","aud","verifier","contexts","normalizeJwtPresentation","normalizePresentation","transformPresentationInput","credential","audience","VC_ERROR","SCHEMA_ERROR","FORMAT_ERROR","AUTH_ERROR","VC_JWT_ERROR","JWT_ERROR","isDateObject","prototype","toString","call","validateJwtFormat","match","validateTimestamp","Number","isInteger","valueOf","validateContext","validateVcType","validateVpType","validateCredentialSubject","createVerifiableCredentialJwt","options","parsedPayload","validateJwtCredentialPayload","createJWT","did","signer","header","alg","createVerifiablePresentationJwt","challenge","nonce","domain","validateJwtPresentationPayload","validators","validateCredentialPayload","validatePresentationPayload","verifyCredential","resolver","policies","verified","verifyJWT","format","verifyPresentationPayloadOptions","matchedAudience","audArray","find","verifyPresentation","presentation","verifiablePresentation"],"mappings":"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"}