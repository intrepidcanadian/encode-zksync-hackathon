"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HelperUtils = void 0;
const axios_1 = __importDefault(require("axios"));
const fs = __importStar(require("fs"));
const errors_1 = require("../errors");
class HelperUtils {
    /**
     * Safe version of axios GET call
     *
     * @param payload payload of axios GET request
     * @returns response of axios GET
     * Throws `AxiosRequestFailureError` if request goes wrong
     */
    static axiosHelper(payload) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const response = yield axios_1.default.get(payload);
                return response.data;
                // eslint-disable-next-line  @typescript-eslint/no-explicit-any
            }
            catch (error) {
                throw new errors_1.AxiosRequestFailureError(error.message);
            }
        });
    }
    /**
     * Safe version of reading JSON from a local file location
     *
     * @param location local file location
     * @returns JSON object from parsed file
     * Throws `ReadFileJsonFailureError` if reading or parsing fails
     */
    static fileReaderJSON(location) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const fileText = fs.readFileSync(location, 'utf-8');
                return HelperUtils.parseJSON(fileText);
                // eslint-disable-next-line  @typescript-eslint/no-explicit-any
            }
            catch (error) {
                throw new errors_1.ReadFileJsonFailureError(error.message);
            }
        });
    }
    /**
     * Safe version of parsing string to JSON object
     *
     * @param payload JSON string to parse into object
     * @returns JSON object from string
     * Throws `JsonParseError` if parsing fails
     */
    static parseJSON(payload) {
        try {
            return JSON.parse(payload);
            // eslint-disable-next-line  @typescript-eslint/no-explicit-any
        }
        catch (error) {
            throw new errors_1.JsonParseError(error.message);
        }
    }
}
exports.HelperUtils = HelperUtils;
